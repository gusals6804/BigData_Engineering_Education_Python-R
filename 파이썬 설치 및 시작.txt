<!------------------------------------------------------------>
1.파이썬 설치

https://www.python.org/downloads/

다운로드 3.7 클릭

Add Python 3.7 to PATH 체크

인스톨하고 클로즈 하면 된다.

파이썬 module docs클릭 콘솔 창을 연다

idle 파이썬 클릭 3+2로 확인 설치 확인

pycharm이라는 툴 다운하기
https://www.jetbrains.com/pycharm/?fromMenu

community로 다운

무조건 논스톱

<!------------------------------------------------------------>
2. 프로젝트에 새로운 파일 만들기

프로젝트 오른쪽 버튼 - new python file

<!------------------------------------------------------------>
3.

print(2+3)

실행버튼 Shift + F10

컨트로 / : 주석 잡기, 해제 할 때도 똑같다.

<!------------------------------------------------------------>
4. 타입을 알아서 찾아준다.

a = 10
b = 20
c = 30 # 정수
d = 3.1 # 소수점
e = "A"
f = "호랑이,코끼리" # "",'' 둘 다 문자열

# type을 알려준다.
print(type(c)) # <class 'int'>
print(type(d)) # <class 'float'>
print(type(e)) # <class 'str'>
print(type(f)) # <class 'str'>

<!------------------------------------------------------------>
5. 대입 연산자는 공유를 나타낸다.

a = 10 # a는 객체다 그리고 숫자 10도 객체 이다. a와 10은 공유가 된다.
print(type(a)) # <class 'int'>

a = 20 # 기존의 a 객체가 사라지고 새로운 a가 생성되고 20과 공유 된다.
print(type(a)) # <class 'int'>

a = '호랑이' # 정수형 객체는 사라지고 문자열 객체가 만들어진다.
print(type(a)) # <class 'str'>

<!------------------------------------------------------------>
6. 오칙 연산

print(3**4) # 3의 4승을 구한다. 81
print(11+3) # 14
print(11-3) # 8
print(11*3) # 33
print(11/3) # 3.6666666666666665
print(11//3) # 몫을 구해준다. 3
print(11%3) # 나머지 2

<!------------------------------------------------------------>
7. 문자열 연산하기

print('무궁화 꽃이 피었습니다')
print('무궁화\n 꽃이 피었습니다') # 줄 바꿈

a = '호랑이'
b = '코끼리'
c = a+b
print(c) # 호랑이코끼리

d = c*3
print(d) # 호랑이코끼리호랑이코끼리호랑이코끼리

a = '무궁화꽃이피었습니다.'
print(a[0]) # 배열 처럼 사용할 수 있다. 무
print(a[9]) # 다
print(a[0]+a[9]) # 무다 문자열 연결
print(a[0],a[9]) # 무 다 ,를 사용하면 한 칸 띄어서 보여준다.

print("="*50) # ==================================================

a = '무궁화꽃이피었습니다.'
b = a[2:5] # 2,3,4를 출력
print(b) #화꽃이
print(a[5:]) # 5번 째부터 끝까지 / 피었습니다.
print(a[:5]) # 처음부터 5 앞까지 / 무궁화꽃이
print(a[:]) # 앞에서 부터 끝까지 / 무궁화꽃이피었습니다.
print(a)

# 문자열은 값을 변경할 수 없다.
a = "apple"
print(a)
a[0] = "b"
print(a) 

# 줄 맞추기 제대로 하기!!
try:
    a[0] = "b"
except:
    print("예외가 발생했습니다.")
print(a)

<!------------------------------------------------------------>
8. # format 사용하기

a = '무궁화%d꽃이피었습니다.'%(100)
print(a)
a = '무궁화%d꽃이%d피었습니다.'%(100,200)
print(a)
a = '무궁화%d꽃이%d피었습니다.%s'%(100,200,'많이')
print(a)

<!------------------------------------------------------------>
9. 문자열의 여러가지 함수

a = '무궁화 무꽃이 무피었습니다. 무궁화'

# count 함수
b = a.count('무')
print(b)

print(a.count('무'))
print(a.count('무궁화'))
print('====================================')

# find 함수
print(a.find('화'))
print(a.find('수')) # 없으면 -1이 나온다.
print(a.find('꽃이'))
print('====================================')

# index 함수
print(a.index('화'))

try:
    print(a.index('수'))
except:
    print("찾지못했습니다.")
print('====================================')

# join 함수
a = "무궁화"
b = ","
c=b.join(a) # 따로 변수를 받아줘야 한다.

print(a,b)
print(a,b,c)

d=" "
e=d.join(a)
print(e)

f="토끼"
g=f.join(a)
print(g)

h=","
print(h.join(a))

<!------------------------------------------------------------>
10. 문자열의 여러가지 함수

# upper, lower
a = "Apple"
b = a.upper() # 대문자
c = a.lower() # 소문자
print(b,c)

# replace
a = "무궁화 꽃이 피었습니다."
b = a.replace("무궁화","진달래")
print(b)

# split
a = "무궁화 꽃이 피었습니다."
b = a.split() # 공백을 기준으로 단어를 끊어라
b = a.split(" ")
print(b) # ['무궁화', '꽃이', '피었습니다.'], []는 리스트라고 부른다.

print(b[0],b[1],b[2])

a = "무궁화 꽃이 궁피었습니다."
b = a.split("궁") # 궁자를 기준으로 끊어 먹어라
print(b) # ['무', '화 꽃이 ', '피었습니다.']

<!------------------------------------------------------------>
11. list

li = []

a = [3,4,5] # add,add,add
b = ["호랑이","코끼리","앵무새"]
c = [10,"호랑이",20,"코끼리"]
d = [10,"호랑이",3.14,a] #리스트가 리스트도 가져올 수 있다.
e = [10,"호랑이",3.14,[10,20,30]]

<!------------------------------------------------------------>
12. list 출력하는 방법

a = [10,20,30]
print(a[0],a[1],a[2])

a = [0,1,2,3,4,5,6,7,8,9]
print(a)
print(a[1])
print(a[:])
print(a[2:5])
print(a[ :5])
print(a[5: ])
# 문자열 사용하는 방법과 똑같다.

a = [0,1,2]
b = [3,4,5,6]
c = a + b
print(c) # 리스트 두 개를 합쳐준다.

d = a * 2
print(d) # 두 번 반복한다.

<!------------------------------------------------------------>
13. list CRUD

li = [10,20,30]
print(li)

# Create
append는 하나씩만 넣을 수 있다.

li.append(40)
print(li)

li.append("호랑이")
print(li)

# insert를 사용하면 속도가 느려진다.
li.insert(0,99)
li.insert(3,"코끼리")
print(li)

#Update

a = [10,20,30]
print(a)
a[1] = 100
print(a)

p.72: 한 개 이상도 수정할 수 있다.

#Delete

a[1:3]=[]
print(a)

del a[1]
print(a)

<!------------------------------------------------------------>
14. #정렬하기

a=[1,4,3,2]
a.sort()
print(a)

a.reverse()
print(a)

<!------------------------------------------------------------>
15. #랜덤한 숫자 뽑기

import random

# 유효 범위를 넘으면 안된다.
# 0~9까지의 범위를 가지고 있다.
a = range(10) # 0~10까지의 유효 범위를 가지고 있다.
print(a)
b = random.sample(a,10) # 중복된 숫자가 나오지 않는다.
print(b)

a = range(100)
b = random.sample(a,12)
print(b)

b.sort()
print(b)
b.reverse()
print(b)

# 이 유효 범위를 리스트로 만들어준다.
a = list(range(10))
print(a)
b = random.sample(a,3)
print(b)

a = random.sample(list(range(10)),3)
print(a)

a = random.sample([10,20,30,40],3)
print(a)

<!------------------------------------------------------------>
16. 리스트 함수 

#리스트 정렬(sort)

#리스트 뒤집기(reverse)

#리스트 위치 반환(index)

#리스트 요소 삽입(insert)

#리스트 요소 제거(remove)

#리스트 요소 끄집어 내기(pop)

#리스트 요소 개수 세기(count)

#리스트 확장(extend)

#리스트 요소 안에 있는지(in)

a = [10,20,30]
print(10 in a)

a = [1,3,5]
b = [2,4,6]
c = a + b
print(c)

a = [1,3,5]
b = [2,4,6]
a = a + b
print(a)

a = [1,3,5]
b = [2,4,6]
a += b
print(a)

<!------------------------------------------------------------>
17. 자료형의 참과 거짓

# 문자열
# "python" 참
# "" 거짓

# a = 3, b = 4는 안된다.

a,b = (3,4)
print(a,b)

# 데이터 교환
a,b=b,a
print(a,b)


<!------------------------------------------------------------>
18. 메모리 공유

a = [1,2,3]
b = a
print(b) #공유 메모리

b[0] = 99
print(a)
print(b)

print(a is b) # a와 b가 같은 객체 입니까?
# True (첫 글자가 대문자이다.)

a = "apple"
b = a
print(a is b)

print(id(a),id(b))

a = [1,2,3]
b = a[ : ]
print(a,b)
print(id(a),id(b)) # 값만 복사 되었다.

a = [1,2,3]
b = a.copy()
print(b)
print(id(a),id(b))

<!------------------------------------------------------------>
19. if문

# 첫 번째 형식
if True:
    print("호랑이\n")
if False:
    print("호랑이")
    print("코끼리\n")
if False:
    print("호랑이")
print("코끼리1\n")
if 3>2:
    print("호랑이1\n")

# 두 번째 형식
if 3<2:
    print("호랑이2")
else:
    print("코끼리2")

if 3>2: print("호랑이3")
else: print("코끼리3")

# 세 번째 형식
a = 130
if a == 10:
    print("호랑이4")
elif a == 20:
    print("코끼리4")
elif a == 30:
    print("사자4")
else:
    print("앵무새4")

a = ""
b = "apple"
c = []
d = [10,20,30]

if d:
    print("참")
else:
    print("거짓")

# 비교 연산자는 자바와 동일하다.

<!------------------------------------------------------------>
19. while문

treeHit = 0
while treeHit<10:
    treeHit = treeHit + 1
    print("나무를 %d번 찍었습니다."% treeHit)
    if treeHit == 10:
        print("나무 넘어갑니다.")

# # 여러 개의 문자열을 줄 바꿈으로 출력할 떄
# a = """호랑이
# 코끼리
# 앵무새 """
#
# print(a)
#
# # 키보드로 부터 숫자나 문자를 받을 때
# b = input()
# print(b)
#
# print(type(b)) # <class 'str'>
#
# #print(b+10)

# a = str(input())
# print(a)

# 숫자형으로 바꿔준다.
# a = int(input())
# print(type(a)) # <class 'int'>
# print(a+20)

# 우박 수 출력
a = int(input())
while True:
    print(a)
    if a==1:
        print("프로그램을 종료합니다.")
        break

    if a%2==0:
        a = a//2
    else:
        a = a * 3 + 1

# 파이썬에는 switch가 없습니다. 대안은 있다.

<!------------------------------------------------------------>
20. for문

for a in [10,20,30]:
    print(a)

li = [10,20,30]
for a in li:
    print(a)

for a in range(10):
    print(a)

# 두 개는 같은 문장이다.
print(10, end="\n")
print(10)

print(10, end="토끼")
print(10, end=" ")
print(10, end=",\n")

# 가로로 데이터를 보고 싶을 때
for a in range(10):
    print(a, end=" ")

a = list(range(10))
print(a)

a = list(range(3, 0))
print(a)

a = list(range(3, 8, 2))
print(a)

# 1에서 10까지 합
m = 0
for i in range(1, 11):
    m = m + i
print(m)

# 5단 출력하기
for a in range(1, 10):
    s = 5 * a
    print("5 * %d = %d" % (a, s))
















 


